// generated by go:generate go run gen/edges.go
package graph


type EnumNodeEdges struct {
	Type EnumToTypeEdges
}

func NewEnumNodeEdges(n *EnumNode) (EnumNodeEdges) {
	return EnumNodeEdges{
		Type: EnumToTypeEdges{
			Resolver: NewEnumToTypeIdResolver(n),
		},
	}
}

type FieldNodeEdges struct {
	BasicType FieldToBasicTypeEdges
	Enum FieldToEnumEdges
	Field FieldToFieldEdges
	Relation FieldToRelationEdges
	Type FieldToTypeEdges
	Path FieldToPathEdges
}

func NewFieldNodeEdges(n *FieldNode) (FieldNodeEdges) {
	return FieldNodeEdges{
		BasicType: FieldToBasicTypeEdges{
			Resolver: NewFieldToBasicTypeIdResolver(n),
		},
		Enum: FieldToEnumEdges{
			Resolver: NewFieldToEnumIdResolver(n),
		},
		Field: FieldToFieldEdges{
			Resolver: NewFieldToFieldIdResolver(n),
		},
		Relation: FieldToRelationEdges{
			Resolver: NewFieldToRelationIdResolver(n),
		},
		Type: FieldToTypeEdges{
			Resolver: NewFieldToTypeIdResolver(n),
		},
		Path: FieldToPathEdges{
			Resolver: NewFieldToPathIdResolver(n),
		},
	}
}

type RelationNodeEdges struct {
	Type RelationToTypeEdges
	Path RelationToPathEdges
	Fields RelationToFieldsEdges
}

func NewRelationNodeEdges(n *RelationNode) (RelationNodeEdges) {
	return RelationNodeEdges{
		Type: RelationToTypeEdges{
			Resolver: NewRelationToTypeIdResolver(n),
		},
		Path: RelationToPathEdges{
			Resolver: NewRelationToPathIdResolver(n),
		},
		Fields: RelationToFieldsEdges{
			Resolver: NewRelationToFieldsIdResolver(n),
		},
	}
}

type TypeNodeEdges struct {
	Endpoint TypeToEndpointEdges
	Enum TypeToEnumEdges
	Type TypeToTypeEdges
	Enums TypeToEnumsEdges
	Fields TypeToFieldsEdges
	Relations TypeToRelationsEdges
	Types TypeToTypesEdges
}

func NewTypeNodeEdges(n *TypeNode) (TypeNodeEdges) {
	return TypeNodeEdges{
		Endpoint: TypeToEndpointEdges{
			Resolver: NewTypeToEndpointIdResolver(n),
		},
		Enum: TypeToEnumEdges{
			Resolver: NewTypeToEnumIdResolver(n),
		},
		Type: TypeToTypeEdges{
			Resolver: NewTypeToTypeIdResolver(n),
		},
		Enums: TypeToEnumsEdges{
			Resolver: NewTypeToEnumsIdResolver(n),
		},
		Fields: TypeToFieldsEdges{
			Resolver: NewTypeToFieldsIdResolver(n),
		},
		Relations: TypeToRelationsEdges{
			Resolver: NewTypeToRelationsIdResolver(n),
		},
		Types: TypeToTypesEdges{
			Resolver: NewTypeToTypesIdResolver(n),
		},
	}
}

type PathNodeEdges struct {
	Relation PathToRelationEdges
	Type PathToTypeEdges
}

func NewPathNodeEdges(n *PathNode) (PathNodeEdges) {
	return PathNodeEdges{
		Relation: PathToRelationEdges{
			Resolver: NewPathToRelationIdResolver(n),
		},
		Type: PathToTypeEdges{
			Resolver: NewPathToTypeIdResolver(n),
		},
	}
}

type EndpointNodeEdges struct {
	Type EndpointToTypeEdges
	Enums EndpointToEnumsEdges
	Types EndpointToTypesEdges
}

func NewEndpointNodeEdges(n *EndpointNode) (EndpointNodeEdges) {
	return EndpointNodeEdges{
		Type: EndpointToTypeEdges{
			Resolver: NewEndpointToTypeIdResolver(n),
		},
		Enums: EndpointToEnumsEdges{
			Resolver: NewEndpointToEnumsIdResolver(n),
		},
		Types: EndpointToTypesEdges{
			Resolver: NewEndpointToTypesIdResolver(n),
		},
	}
}

